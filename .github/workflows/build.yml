name: Build + Test

on:
  push:
    branches:
      - main
      - \d+\.x
  pull_request:
  merge_group:
    types: [checks_requested]
  workflow_call:

jobs:

  build:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest

    outputs:
      semVer2: ${{ steps.nbgv.outputs.SemVer2 }}
      isPreviewRelease: ${{ startsWith(steps.nbgv.outputs.PrereleaseVersionNoLeadingHyphen, 'preview') }}
      isStableRelease: ${{ steps.nbgv.outputs.PrereleaseVersionNoLeadingHyphen == '' }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: 'true'
        
    - name: Setup .NET ${{ 7.0 }}
      uses: actions/setup-dotnet@v3
      with:
        global-json-file: global.json

    - name: Determine semantic version
      uses: dotnet/nbgv@master
      id: nbgv

    - name: Build
      run: dotnet build ./${{ github.event.repository.name }}.sln -c Release -p:ContinuousIntegrationBuild=true

    - name: Pack
      if: ${{ github.event_name == 'push' }}
      run: dotnet pack ./${{ github.event.repository.name }}.sln -c Release --no-build

    - name: Copy NuGet packages to artifacts
      if: ${{ github.event_name == 'push' }}
      uses: actions/upload-artifact@v3
      with:
        name: NuGetPackages
        path: ./**/${{ github.event.repository.name }}.*.nupkg
        if-no-files-found: error

  test-linux:
    if: ${{ always() && github.event_name == 'merge_group' }}
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: 'true'
        
    - name: Setup .NET SDKs
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          3
          5
          6
          7

    - name: Build
      run: dotnet build ./${{ github.event.repository.name }}.sln -c Release
      
    - name: Test
      run: dotnet test ./${{ github.event.repository.name }}.sln -c Release --no-build
      env:
        RunGremlinServerIntegrationTests: 'true'
        RunJanusGraphIntegrationTests: 'true'
        RunNeptuneIntegrationTests: 'true'

    - name: Collect coverage
      uses: codecov/codecov-action@v3

    - name: Copy *.received-files to artifacts
      if: ${{ always() }}
      uses: actions/upload-artifact@v3
      with:
        name: test-linux-received-snapshots
        path: ./**/*.received.*

  test-windows:
    if: ${{ always() && github.event_name == 'merge_group' }}
    runs-on: windows-2022

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: 'true'

    - name: Setup .NET SDKs
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          3
          5
          6
          7
          
    - name: Start CosmosDb Emulator
      uses: Gremlinq/cosmos-emulator-github-action@EnableGremlin

    - name: Build
      run: dotnet build ./${{ github.event.repository.name }}.sln -c Release
      
    - name: Test
      run: dotnet test ./${{ github.event.repository.name }}.sln -c Release --no-build
      env:
        RunCosmosDbIntegrationTests: 'true'

    - name: Copy *.received-files to artifacts
      if: ${{ always() }}
      uses: actions/upload-artifact@v3
      with:
        name: test-windows-received-snapshots
        path: ./**/*.received.*

  create-snapshot-fix-pr:
    if: ${{ always() && github.event_name == 'merge_group' }}
    runs-on: ubuntu-latest
    needs: [ test-linux, test-windows ]
    env:
      pr-message: 'Fix snapshots for #${{ github.event.number }}.'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - uses: actions/download-artifact@v2
      continue-on-error: true
      with:
        name: test-linux-received-snapshots
        
    - uses: actions/download-artifact@v2
      continue-on-error: true
      with:
        name: test-windows-received-snapshots

    - name: Rename received files
      run: find . -type f -name '*.DotNet7_0.received.*' | while read FILE ; do newfile="$(echo ${FILE} |sed -e 's/.DotNet7_0.received/.verified/')"; mv "${FILE}" "${newfile}"; done 

    - name: Create snapshot changes pull request
      uses: peter-evans/create-pull-request@v4
      with:
        commit-message: ${{ env.pr-message }}
        title: ${{ env.pr-message }}
        body: ${{ env.pr-message }}
        base: ${{ github.head_ref }}
        branch-suffix: short-commit-hash

  push:
    if: ${{ github.event_name == 'push' && vars.PUSH_TO_GITHUB_PACKAGES == 'true' }}
    needs: [ build, test-linux, test-windows ]
    runs-on: ubuntu-latest

    steps:

    - uses: actions/download-artifact@v2
      with:
        name: NuGetPackages

    - name: Push NuGet packages to GitHub packages
      run: dotnet nuget push **/${{ github.event.repository.name }}.*.nupkg
        --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
        --api-key ${{ secrets.PUSH_TO_PACKAGES_PAT }}
        --no-symbols
        --skip-duplicate

  release:
    if: ${{ github.event_name == 'push' && github.ref_name != 'main' }}
    needs: [ build, test-linux, test-windows ]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@v2
      with:
        name: NuGetPackages

    - name: Draft release
      id: create_release
      uses: release-drafter/release-drafter@v5.22.0
      with:
        name: ${{ github.event.repository.name }} ${{ needs.build.outputs.semVer2 }}
        prerelease: ${{ needs.build.outputs.isPreviewRelease }}
        tag: ${{ needs.build.outputs.semVer2 }}
        commitish: ${{ github.ref }}
      env:
        GITHUB_TOKEN: ${{ secrets.CREATE_RELEASE_PAT }}

    - uses: shogo82148/actions-upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: '**/${{ github.event.repository.name }}.*.nupkg'
        github_token: ${{ secrets.CREATE_RELEASE_PAT }}
        
    - uses: eregon/publish-release@v1
      with:
        release_id: ${{ steps.create_release.outputs.id }}
      env:
        GITHUB_TOKEN: ${{ secrets.CREATE_RELEASE_PAT }}


