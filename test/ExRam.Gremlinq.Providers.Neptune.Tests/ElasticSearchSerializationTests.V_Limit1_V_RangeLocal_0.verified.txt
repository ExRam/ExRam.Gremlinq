{
  Id: Guid_1,
  Bytecode: {
    SourceInstructions: [
      {
        OperatorName: withSideEffect,
        Arguments: [
          Neptune#fts.endpoint,
          http://elastic.search.server
        ]
      },
      {
        OperatorName: withSideEffect,
        Arguments: [
          Neptune#fts.queryType,
          query_string
        ]
      }
    ],
    StepInstructions: [
      {
        OperatorName: V
      },
      {
        OperatorName: limit,
        Arguments: [
          1
        ]
      },
      {
        OperatorName: range,
        Arguments: [
          {
            EnumName: Scope,
            EnumValue: local
          },
          0,
          0
        ]
      },
      {
        OperatorName: project,
        Arguments: [
          id,
          label,
          properties
        ]
      },
      {
        OperatorName: by,
        Arguments: [
          {
            EnumName: T,
            EnumValue: id
          }
        ]
      },
      {
        OperatorName: by,
        Arguments: [
          {
            EnumName: T,
            EnumValue: label
          }
        ]
      },
      {
        OperatorName: by,
        Arguments: [
          {
            StepInstructions: [
              {
                OperatorName: properties
              },
              {
                OperatorName: group
              },
              {
                OperatorName: by,
                Arguments: [
                  {
                    EnumName: T,
                    EnumValue: label
                  }
                ]
              },
              {
                OperatorName: by,
                Arguments: [
                  {
                    StepInstructions: [
                      {
                        OperatorName: project,
                        Arguments: [
                          id,
                          label,
                          value
                        ]
                      },
                      {
                        OperatorName: by,
                        Arguments: [
                          {
                            EnumName: T,
                            EnumValue: id
                          }
                        ]
                      },
                      {
                        OperatorName: by,
                        Arguments: [
                          {
                            EnumName: T,
                            EnumValue: label
                          }
                        ]
                      },
                      {
                        OperatorName: by,
                        Arguments: [
                          {
                            EnumName: T,
                            EnumValue: value
                          }
                        ]
                      },
                      {
                        OperatorName: fold
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}