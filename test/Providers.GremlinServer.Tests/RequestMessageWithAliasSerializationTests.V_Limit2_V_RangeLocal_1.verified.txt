{
  RequestId: Guid_1,
  Operation: bytecode,
  Processor: traversal,
  Arguments: {
    aliases: {
      g: a
    },
    gremlin: {
      StepInstructions: [
        {
          OperatorName: V
        },
        {
          OperatorName: limit,
          Arguments: [
            2
          ]
        },
        {
          OperatorName: fold
        },
        {
          OperatorName: map,
          Arguments: [
            {
              StepInstructions: [
                {
                  OperatorName: range,
                  Arguments: [
                    {
                      EnumName: Scope,
                      EnumValue: local
                    },
                    0,
                    1
                  ]
                },
                {
                  OperatorName: choose,
                  Arguments: [
                    {
                      StepInstructions: [
                        {
                          OperatorName: count,
                          Arguments: [
                            {
                              EnumName: Scope,
                              EnumValue: local
                            }
                          ]
                        },
                        {
                          OperatorName: is,
                          Arguments: [
                            {
                              OperatorName: eq,
                              Value: 1
                            }
                          ]
                        }
                      ]
                    },
                    {
                      StepInstructions: [
                        {
                          OperatorName: fold
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          OperatorName: map,
          Arguments: [
            {
              StepInstructions: [
                {
                  OperatorName: unfold
                },
                {
                  OperatorName: project,
                  Arguments: [
                    id,
                    label,
                    properties
                  ]
                },
                {
                  OperatorName: by,
                  Arguments: [
                    {
                      EnumName: T,
                      EnumValue: id
                    }
                  ]
                },
                {
                  OperatorName: by,
                  Arguments: [
                    {
                      EnumName: T,
                      EnumValue: label
                    }
                  ]
                },
                {
                  OperatorName: by,
                  Arguments: [
                    {
                      StepInstructions: [
                        {
                          OperatorName: properties
                        },
                        {
                          OperatorName: group
                        },
                        {
                          OperatorName: by,
                          Arguments: [
                            {
                              EnumName: T,
                              EnumValue: label
                            }
                          ]
                        },
                        {
                          OperatorName: by,
                          Arguments: [
                            {
                              StepInstructions: [
                                {
                                  OperatorName: project,
                                  Arguments: [
                                    id,
                                    label,
                                    value,
                                    properties
                                  ]
                                },
                                {
                                  OperatorName: by,
                                  Arguments: [
                                    {
                                      EnumName: T,
                                      EnumValue: id
                                    }
                                  ]
                                },
                                {
                                  OperatorName: by,
                                  Arguments: [
                                    {
                                      EnumName: T,
                                      EnumValue: label
                                    }
                                  ]
                                },
                                {
                                  OperatorName: by,
                                  Arguments: [
                                    {
                                      EnumName: T,
                                      EnumValue: value
                                    }
                                  ]
                                },
                                {
                                  OperatorName: by,
                                  Arguments: [
                                    {
                                      StepInstructions: [
                                        {
                                          OperatorName: valueMap
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  OperatorName: fold
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  OperatorName: fold
                }
              ]
            }
          ]
        }
      ]
    }
  }
}