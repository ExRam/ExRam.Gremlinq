{
  SourceInstructions: [
    {
      OperatorName: withSideEffect,
      Arguments: [
        Neptune#fts.endpoint,
        http://elastic.search.server
      ]
    },
    {
      OperatorName: withSideEffect,
      Arguments: [
        Neptune#fts.queryType,
        query_string
      ]
    }
  ],
  StepInstructions: [
    {
      OperatorName: inject,
      Arguments: [
        +4912345
      ]
    },
    {
      OperatorName: as,
      Arguments: [
        _c
      ]
    },
    {
      OperatorName: V
    },
    {
      OperatorName: hasLabel,
      Arguments: [
        Company
      ]
    },
    {
      OperatorName: has,
      Arguments: [
        PhoneNumbers,
        {
          StepInstructions: [
            {
              OperatorName: where,
              Arguments: [
                {
                  OperatorName: eq,
                  Value: _c
                }
              ]
            }
          ]
        }
      ]
    },
    {
      OperatorName: project,
      Arguments: [
        id,
        label,
        properties
      ]
    },
    {
      OperatorName: by,
      Arguments: [
        {
          EnumName: T,
          EnumValue: id
        }
      ]
    },
    {
      OperatorName: by,
      Arguments: [
        {
          EnumName: T,
          EnumValue: label
        }
      ]
    },
    {
      OperatorName: by,
      Arguments: [
        {
          StepInstructions: [
            {
              OperatorName: properties
            },
            {
              OperatorName: group
            },
            {
              OperatorName: by,
              Arguments: [
                {
                  EnumName: T,
                  EnumValue: label
                }
              ]
            },
            {
              OperatorName: by,
              Arguments: [
                {
                  StepInstructions: [
                    {
                      OperatorName: project,
                      Arguments: [
                        id,
                        label,
                        value
                      ]
                    },
                    {
                      OperatorName: by,
                      Arguments: [
                        {
                          EnumName: T,
                          EnumValue: id
                        }
                      ]
                    },
                    {
                      OperatorName: by,
                      Arguments: [
                        {
                          EnumName: T,
                          EnumValue: label
                        }
                      ]
                    },
                    {
                      OperatorName: by,
                      Arguments: [
                        {
                          EnumName: T,
                          EnumValue: value
                        }
                      ]
                    },
                    {
                      OperatorName: fold
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}